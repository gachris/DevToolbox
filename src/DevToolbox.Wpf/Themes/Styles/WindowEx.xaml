<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:DevToolbox.Wpf.Controls"
    xmlns:converters="clr-namespace:DevToolbox.Wpf.Converters"
    xmlns:helpers="clr-namespace:DevToolbox.Wpf.Helpers"
    xmlns:windows="clr-namespace:DevToolbox.Wpf.Windows">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Button.BaseChromeStyle" TargetType="{x:Type Button}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="45" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <controls:FontGlyph
                        x:Name="PART_Path"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Code="{Binding}"
                        FontSize="16"
                        Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=Foreground}"
                        SnapsToDevicePixels="True"
                        TextOptions.TextFormattingMode="Display" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=windows:WindowEx}, Path=Chrome.CaptionHeight}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource Button.Chrome.Background}" />
        <Setter Property="Foreground" Value="{DynamicResource Button.Chrome.Foreground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Button.Chrome.BorderBrush}" />
        <Setter Property="helpers:UIElementHelper.MouseOverBackground" Value="{DynamicResource Button.Chrome.MouseOverBackground}" />
        <Setter Property="helpers:UIElementHelper.MouseOverForeground" Value="{DynamicResource Button.Chrome.MouseOverForeground}" />
        <Setter Property="helpers:UIElementHelper.MouseOverBorderBrush" Value="{DynamicResource Button.Chrome.MouseOverBorderBrush}" />
        <Setter Property="helpers:UIElementHelper.PressedBackground" Value="{DynamicResource Button.Chrome.PressedBackground}" />
        <Setter Property="helpers:UIElementHelper.PressedForeground" Value="{DynamicResource Button.Chrome.PressedForeground}" />
        <Setter Property="helpers:UIElementHelper.PressedBorderBrush" Value="{DynamicResource Button.Chrome.PressedBorderBrush}" />
        <Setter Property="helpers:UIElementHelper.DisabledBackground" Value="{DynamicResource Button.Chrome.DisabledBackground}" />
        <Setter Property="helpers:UIElementHelper.DisabledForeground" Value="{DynamicResource Button.Chrome.DisabledForeground}" />
        <Setter Property="helpers:UIElementHelper.DisabledBorderBrush" Value="{DynamicResource Button.Chrome.DisabledBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(helpers:UIElementHelper.CornerRadius)}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(helpers:UIElementHelper.PressedBackground)}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(helpers:UIElementHelper.MouseOverBackground)}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(helpers:UIElementHelper.MouseOverBorderBrush)}" />
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(helpers:UIElementHelper.MouseOverForeground)}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(helpers:UIElementHelper.PressedBackground)}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(helpers:UIElementHelper.PressedBorderBrush)}" />
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(helpers:UIElementHelper.PressedForeground)}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(helpers:UIElementHelper.DisabledBackground)}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(helpers:UIElementHelper.DisabledBorderBrush)}" />
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(helpers:UIElementHelper.DisabledForeground)}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Button.Chrome.InactiveBackground}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Button.Chrome.InactiveBorderBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource Button.Chrome.InactiveForeground}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="windows:WindowEx.HitTestResult" Value="Close">
                <Setter Property="Content" Value="{x:Static controls:Symbol.ChromeClose}" />
            </Trigger>
            <Trigger Property="windows:WindowEx.HitTestResult" Value="Restore">
                <Setter Property="Content" Value="{x:Static controls:Symbol.ChromeRestore}" />
            </Trigger>
            <Trigger Property="windows:WindowEx.HitTestResult" Value="Max">
                <Setter Property="Content" Value="{x:Static controls:Symbol.ChromeMaximize}" />
            </Trigger>
            <Trigger Property="windows:WindowEx.HitTestResult" Value="Min">
                <Setter Property="Content" Value="{x:Static controls:Symbol.ChromeMinimize}" />
            </Trigger>
            <Trigger Property="windows:WindowEx.HitTestResult" Value="Help">
                <Setter Property="Content" Value="{x:Static controls:Symbol.F1Help}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type windows:WindowEx},
                                     ResourceId=HelpButtonStyleKey}"
        BasedOn="{StaticResource Button.BaseChromeStyle}"
        TargetType="{x:Type Button}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding WindowStyle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" Value="ToolWindow">
                <Setter Property="Width" Value="21" />
                <Setter Property="Height" Value="21" />
                <Setter Property="Margin" Value="0,0,5,0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type windows:WindowEx},
                                     ResourceId=MinimizeButtonStyleKey}"
        BasedOn="{StaticResource Button.BaseChromeStyle}"
        TargetType="{x:Type Button}" />

    <Style
        x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type windows:WindowEx},
                                     ResourceId=MaximizeButtonStyleKey}"
        BasedOn="{StaticResource Button.BaseChromeStyle}"
        TargetType="{x:Type Button}" />

    <Style
        x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type windows:WindowEx},
                                     ResourceId=RestoreButtonStyleKey}"
        BasedOn="{StaticResource Button.BaseChromeStyle}"
        TargetType="{x:Type Button}" />

    <Style
        x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type windows:WindowEx},
                                     ResourceId=CloseButtonStyleKey}"
        BasedOn="{StaticResource Button.BaseChromeStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Button.Chrome.Close.Background}" />
        <Setter Property="Foreground" Value="{DynamicResource Button.Chrome.Close.Foreground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Button.Chrome.Close.BorderBrush}" />
        <Setter Property="helpers:UIElementHelper.MouseOverBackground" Value="{DynamicResource Button.Chrome.Close.MouseOverBackground}" />
        <Setter Property="helpers:UIElementHelper.MouseOverForeground" Value="{DynamicResource Button.Chrome.Close.MouseOverForeground}" />
        <Setter Property="helpers:UIElementHelper.MouseOverBorderBrush" Value="{DynamicResource Button.Chrome.Close.MouseOverBorderBrush}" />
        <Setter Property="helpers:UIElementHelper.PressedBackground" Value="{DynamicResource Button.Chrome.Close.PressedBackground}" />
        <Setter Property="helpers:UIElementHelper.PressedForeground" Value="{DynamicResource Button.Chrome.Close.PressedForeground}" />
        <Setter Property="helpers:UIElementHelper.PressedBorderBrush" Value="{DynamicResource Button.Chrome.Close.PressedBorderBrush}" />
        <Setter Property="helpers:UIElementHelper.DisabledBackground" Value="{DynamicResource Button.Chrome.Close.DisabledBackground}" />
        <Setter Property="helpers:UIElementHelper.DisabledForeground" Value="{DynamicResource Button.Chrome.Close.DisabledForeground}" />
        <Setter Property="helpers:UIElementHelper.DisabledBorderBrush" Value="{DynamicResource Button.Chrome.Close.DisabledBorderBrush}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding WindowStyle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" Value="ToolWindow">
                <Setter Property="Width" Value="21" />
                <Setter Property="Height" Value="21" />
                <Setter Property="Margin" Value="0,0,5,0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WindowExStyle" TargetType="{x:Type windows:WindowEx}">
        <Setter Property="Background" Value="{DynamicResource Window.Background}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type windows:WindowEx}">
                    <AdornerDecorator>
                        <controls:WindowHeaderedContentControl
                            Background="{TemplateBinding Background}"
                            Focusable="False"
                            Header="{TemplateBinding Header}"
                            HeaderTemplate="{TemplateBinding HeaderTemplate}"
                            Style="{TemplateBinding HeaderedContentControlStyle}">
                            <ContentPresenter />
                        </controls:WindowHeaderedContentControl>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="windows:WindowBehavior.HasEffect" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource WindowExStyle}" TargetType="{x:Type windows:WindowEx}" />

</ResourceDictionary>