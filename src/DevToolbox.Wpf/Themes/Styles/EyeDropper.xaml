<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:DevToolbox.Wpf.Controls"
    xmlns:converters="clr-namespace:DevToolbox.Wpf.Converters"
    xmlns:helpers="clr-namespace:DevToolbox.Wpf.Helpers">

    <converters:ContrastColorByBrightnessConverter x:Key="ContrastColorByBrightnessConverter" />

    <Style x:Key="{x:Type controls:EyeDropper}" TargetType="{x:Type controls:EyeDropper}">
        <Setter Property="Background" Value="{DynamicResource EyeDropper.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource EyeDropper.BorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource EyeDropper.Foreground}" />
        <Setter Property="PopupBackground" Value="{DynamicResource EyeDropper.PopupBackground}" />
        <Setter Property="PopupForeground" Value="{DynamicResource EyeDropper.PopupForeground}" />
        <Setter Property="PopupBorderBrush" Value="{DynamicResource EyeDropper.PopupBorderBrush}" />
        <Setter Property="helpers:UIElementHelper.MouseOverBackground" Value="{DynamicResource EyeDropper.MouseOverBackground}" />
        <Setter Property="helpers:UIElementHelper.MouseOverForeground" Value="{DynamicResource EyeDropper.MouseOverForeground}" />
        <Setter Property="helpers:UIElementHelper.MouseOverBorderBrush" Value="{DynamicResource EyeDropper.MouseOverBorderBrush}" />
        <Setter Property="helpers:UIElementHelper.PressedBackground" Value="{DynamicResource EyeDropper.PressedBackground}" />
        <Setter Property="helpers:UIElementHelper.PressedForeground" Value="{DynamicResource EyeDropper.PressedForeground}" />
        <Setter Property="helpers:UIElementHelper.PressedBorderBrush" Value="{DynamicResource EyeDropper.PressedBorderBrush}" />
        <Setter Property="helpers:UIElementHelper.DisabledBackground" Value="{DynamicResource EyeDropper.DisabledBackground}" />
        <Setter Property="helpers:UIElementHelper.DisabledForeground" Value="{DynamicResource EyeDropper.DisabledForeground}" />
        <Setter Property="helpers:UIElementHelper.DisabledBorderBrush" Value="{DynamicResource EyeDropper.DisabledBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:EyeDropper}">
                    <Grid UseLayoutRounding="True">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(helpers:UIElementHelper.CornerRadius)}"
                            SnapsToDevicePixels="True">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <Popup x:Name="PART_Popup">
                            <Border BorderBrush="{TemplateBinding PopupBorderBrush}" BorderThickness="1">
                                <Grid Background="{TemplateBinding PopupBackground}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="1" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid
                                        Grid.Column="0"
                                        SnapsToDevicePixels="True"
                                        UseLayoutRounding="True">
                                        <controls:ZoomAndPanControl
                                            x:Name="PART_ZoomAndPanControl"
                                            Width="49"
                                            Height="49"
                                            UseLayoutRounding="True" />
                                        <controls:FontGlyph
                                            Margin="3,3,0,0"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Panel.ZIndex="2"
                                            Code="{x:Static controls:Symbol.ASXAdd}"
                                            FontSize="9"
                                            Foreground="{Binding Path=Color, Converter={StaticResource ContrastColorByBrightnessConverter}, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                    </Grid>
                                    <Border
                                        Grid.Column="1"
                                        Width="1"
                                        BorderBrush="{TemplateBinding PopupBorderBrush}"
                                        BorderThickness="1" />
                                    <TextBlock
                                        Grid.Column="2"
                                        Margin="8"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        FontFamily="Consolas"
                                        FontSize="20"
                                        FontWeight="SemiBold"
                                        Foreground="{TemplateBinding PopupForeground}"
                                        Text="{TemplateBinding FormattedColor}" />
                                </Grid>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(helpers:UIElementHelper.MouseOverBackground)}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(helpers:UIElementHelper.MouseOverBorderBrush)}" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(helpers:UIElementHelper.MouseOverForeground)}" />
                        </Trigger>
                        <Trigger Property="IsCapturing" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(helpers:UIElementHelper.PressedBackground)}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(helpers:UIElementHelper.PressedBorderBrush)}" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(helpers:UIElementHelper.PressedForeground)}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(helpers:UIElementHelper.DisabledBackground)}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(helpers:UIElementHelper.DisabledBorderBrush)}" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(helpers:UIElementHelper.DisabledForeground)}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
