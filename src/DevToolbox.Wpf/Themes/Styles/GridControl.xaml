<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:DevToolbox.Wpf.Controls"
    xmlns:helpers="clr-namespace:DevToolbox.Wpf.Helpers"
    xmlns:system="clr-namespace:System;assembly=System.Runtime">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/DevToolbox.Wpf;component/Themes/Styles/DataGridCell/Generic.xaml" />
        <ResourceDictionary Source="pack://application:,,,/DevToolbox.Wpf;component/Themes/Styles/DataGridColumnHeader/Generic.xaml" />
        <ResourceDictionary Source="pack://application:,,,/DevToolbox.Wpf;component/Themes/Styles/DataGridColumnHeader/GroupByColumnHeaderEdit.xaml" />
        <ResourceDictionary Source="pack://application:,,,/DevToolbox.Wpf;component/Themes/Styles/DataGridRow/Generic.xaml" />
        <ResourceDictionary Source="pack://application:,,,/DevToolbox.Wpf;component/Themes/Styles/DataGridRowHeader/Generic.xaml" />
        <ResourceDictionary Source="pack://application:,,,/DevToolbox.Wpf;component/Themes/Styles/ScrollViewer/Generic.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Button.Background}" />
        <Setter Property="Foreground" Value="{DynamicResource Button.Foreground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Button.BorderBrush}" />
        <Setter Property="helpers:UIElementHelper.MouseOverBackground" Value="{DynamicResource Button.MouseOverBackground}" />
        <Setter Property="helpers:UIElementHelper.MouseOverForeground" Value="{DynamicResource Button.MouseOverForeground}" />
        <Setter Property="helpers:UIElementHelper.MouseOverBorderBrush" Value="{DynamicResource Button.MouseOverBorderBrush}" />
        <Setter Property="helpers:UIElementHelper.PressedBackground" Value="{DynamicResource Button.PressedBackground}" />
        <Setter Property="helpers:UIElementHelper.PressedForeground" Value="{DynamicResource Button.PressedForeground}" />
        <Setter Property="helpers:UIElementHelper.PressedBorderBrush" Value="{DynamicResource Button.PressedBorderBrush}" />
        <Setter Property="helpers:UIElementHelper.DisabledBackground" Value="{DynamicResource Button.DisabledBackground}" />
        <Setter Property="helpers:UIElementHelper.DisabledForeground" Value="{DynamicResource Button.DisabledForeground}" />
        <Setter Property="helpers:UIElementHelper.DisabledBorderBrush" Value="{DynamicResource Button.DisabledBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True" />
                        <Polygon
                            x:Name="Arrow"
                            Margin="8,8,3,3"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            Fill="{TemplateBinding Foreground}"
                            Points="0,10 10,10 10,0"
                            Stretch="Uniform" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(helpers:UIElementHelper.PressedBackground)}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(helpers:UIElementHelper.MouseOverBackground)}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(helpers:UIElementHelper.MouseOverBorderBrush)}" />
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(helpers:UIElementHelper.MouseOverForeground)}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(helpers:UIElementHelper.PressedBackground)}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(helpers:UIElementHelper.PressedBorderBrush)}" />
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(helpers:UIElementHelper.PressedForeground)}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(helpers:UIElementHelper.DisabledBackground)}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(helpers:UIElementHelper.DisabledBorderBrush)}" />
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(helpers:UIElementHelper.DisabledForeground)}" />
                            <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GroupPanelItemsControlStyle" TargetType="{x:Type ItemsControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ItemsControl}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <Grid>
                            <ItemsPresenter x:Name="itemsPresenter" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <TextBlock
                                x:Name="emptyTextBlock"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="11"
                                Text="Click a plus sign in column header to group by that column."
                                Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="emptyTextBlock" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="True">
                            <Setter TargetName="emptyTextBlock" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource ResourceKey={x:Type DataGrid}}" TargetType="{x:Type controls:GridControl}">
        <Setter Property="RowStyle" Value="{StaticResource DataGridRowStyle}" />
        <Setter Property="CellStyle" Value="{StaticResource DataGridCellStyle}" />
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource DataGridColumnHeaderStyle}" />
        <Setter Property="RowHeaderStyle" Value="{StaticResource DataGridRowHeaderStyle}" />
        <Setter Property="Background" Value="{DynamicResource DataGrid.Background}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGrid.Foreground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource DataGrid.BorderBrush}" />
        <Setter Property="RowBackground" Value="{DynamicResource DataGrid.RowBackground}" />
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource DataGrid.AlternatingRowBackground}" />
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource DataGrid.VerticalGridLinesBrush}" />
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource DataGrid.HorizontalGridLinesBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:GridControl}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid
                                Grid.Row="0"
                                Margin="8"
                                Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ShowGroupPanel, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>
                                <ItemsControl
                                    x:Name="groupPanelItemsControl"
                                    Grid.Column="0"
                                    HorizontalContentAlignment="Left"
                                    ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=GroupByCollection}"
                                    Style="{StaticResource GroupPanelItemsControlStyle}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <controls:FlowOffsetPanel OffsetX="2" OffsetY="4" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <DataGridColumnHeader Style="{StaticResource GroupByColumnHeaderEdit}" />
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                <Button
                                    Grid.Column="1"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    Background="Transparent"
                                    Command="{x:Static controls:GridControl.ClearGroupCommand}"
                                    Cursor="Hand"
                                    Visibility="{Binding ElementName=groupPanelItemsControl, Path=HasItems, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <controls:FontGlyph
                                        Width="12"
                                        Height="12"
                                        Code="{x:Static controls:Symbol.Close}" />
                                </Button>
                            </Grid>
                            <ScrollViewer
                                x:Name="DG_ScrollViewer"
                                Grid.Row="1"
                                Focusable="False">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <Button
                                                Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type controls:GridControl}}}"
                                                Background="Transparent"
                                                BorderThickness="1"
                                                Command="{x:Static DataGrid.SelectAllCommand}"
                                                Focusable="false"
                                                Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle,
                                                                                              TypeInTargetAssembly={x:Type controls:GridControl}}}"
                                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type controls:GridControl}}}">
                                                <Button.InputBindings>
                                                    <MouseBinding Command="{x:Static helpers:DataGridHelper.OpenColumnChooserCommand}" Gesture="RightClick" />
                                                </Button.InputBindings>
                                            </Button>
                                            <DataGridColumnHeadersPresenter
                                                x:Name="PART_ColumnHeadersPresenter"
                                                Grid.Column="1"
                                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type controls:GridControl}}}" />
                                            <Grid Grid.Row="1" Grid.ColumnSpan="2">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:GridControl}}, Path=NonFrozenRowsViewportVerticalOffset}" />
                                                    <RowDefinition Height="*" />
                                                </Grid.RowDefinitions>
                                                <ScrollContentPresenter
                                                    x:Name="PART_ScrollContentPresenter"
                                                    Grid.Row="0"
                                                    Grid.RowSpan="2"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}" />
                                            </Grid>
                                            <Grid Grid.Row="1" Grid.Column="2">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:GridControl}}, Path=NonFrozenRowsViewportVerticalOffset}" />
                                                    <RowDefinition Height="*" />
                                                </Grid.RowDefinitions>
                                                <ScrollBar
                                                    x:Name="PART_VerticalScrollBar"
                                                    Grid.Row="1"
                                                    Maximum="{TemplateBinding ScrollableHeight}"
                                                    Orientation="Vertical"
                                                    Style="{StaticResource ScrollBarStyle}"
                                                    ViewportSize="{TemplateBinding ViewportHeight}"
                                                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                    Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                            </Grid>
                                            <Grid Grid.Row="2" Grid.Column="1">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type controls:GridControl}}}" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar
                                                    x:Name="PART_HorizontalScrollBar"
                                                    Grid.Column="1"
                                                    Maximum="{TemplateBinding ScrollableWidth}"
                                                    Orientation="Horizontal"
                                                    Style="{StaticResource ScrollBarStyle}"
                                                    ViewportSize="{TemplateBinding ViewportWidth}"
                                                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                    Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                            <controls:DataGridSummaryTable
                                x:Name="PART_DataGridSummaryTable"
                                Grid.Row="2"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0,1,0,0"
                                Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ShowSummaries, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <Grid
                                x:Name="PART_RowFilterControl"
                                Grid.Row="3"
                                Margin="8">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    Grid.Column="0"
                                    Margin="0,0,8,0"
                                    VerticalAlignment="Center"
                                    Foreground="{TemplateBinding Foreground}"
                                    Text="{Binding Path=(controls:AutoFilter.AutoFilter).FilterExpression, RelativeSource={RelativeSource Mode=TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                    TextWrapping="Wrap" />
                                <Button
                                    Grid.Column="1"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    Background="Transparent"
                                    Command="{x:Static helpers:DataGridHelper.ClearRowFilterCommand}"
                                    Cursor="Hand">
                                    <controls:FontGlyph
                                        Width="12"
                                        Height="12"
                                        Code="{x:Static controls:Symbol.Close}" />
                                </Button>
                            </Grid>
                            <ContentControl Grid.Row="4" ContentTemplate="{TemplateBinding FooterDataTemplate}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(controls:AutoFilter.AutoFilter).FilterExpression}" Value="{x:Null}">
                            <Setter TargetName="PART_RowFilterControl" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(controls:AutoFilter.AutoFilter).FilterExpression}" Value="{x:Static system:String.Empty}">
                            <Setter TargetName="PART_RowFilterControl" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>