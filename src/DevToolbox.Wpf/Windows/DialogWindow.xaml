<windows:WindowEx
    x:Class="DevToolbox.Wpf.Windows.DialogWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:behaviors="clr-namespace:DevToolbox.Wpf.Behaviors"
    xmlns:commands="clr-namespace:DevToolbox.Wpf.Windows.Commands"
    xmlns:controls="clr-namespace:DevToolbox.Wpf.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="clr-namespace:DevToolbox.Wpf.Windows.ViewModels"
    xmlns:windows="clr-namespace:DevToolbox.Wpf.Windows"
    Width="700"
    Height="500"
    d:DataContext="{d:DesignInstance viewModels:DialogWindowViewModel}"
    FontFamily="Segoe UI"
    ShowIcon="False"
    SnapsToDevicePixels="True"
    UseLayoutRounding="True"
    mc:Ignorable="d">
    <windows:WindowEx.Resources>
        <ResourceDictionary>

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

            <ItemsPanelTemplate x:Key="ButtonsItemsPanelTemplate">
                <StackPanel Orientation="Horizontal" />
            </ItemsPanelTemplate>
     
            <DataTemplate x:Key="ButtonItemTemplate" DataType="{x:Type viewModels:PluginButtonViewModel}">
                <Button
                    x:Name="button"
                    MinWidth="80"
                    Margin="8,0,0,0"
                    Padding="6"
                    Command="{Binding Command}"
                    Content="{Binding Content}"
                    FontSize="{DynamicResource FontSize14}"
                    IsCancel="{Binding IsCancel}"
                    IsDefault="{Binding IsDefault}">
                    <Button.ContentTemplate>
                        <DataTemplate>
                            <TextBlock
                                HorizontalAlignment="Center"
                                Text="{Binding}"
                                TextTrimming="CharacterEllipsis"
                                TextWrapping="NoWrap" />
                        </DataTemplate>
                    </Button.ContentTemplate>
                </Button>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                        <Setter TargetName="button" Property="Margin" Value="0" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

        </ResourceDictionary>
    </windows:WindowEx.Resources>
    <windows:WindowEx.TitleTextBlockStyle>
        <Style TargetType="TextBlock">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontWeight" Value="SemiBold" />
        </Style>
    </windows:WindowEx.TitleTextBlockStyle>
    <b:Interaction.Behaviors>
        <behaviors:RoutedCommandBinding Command="{Binding YesCommand}" RoutedCommand="commands:DialogWindowCommands.Yes" />
        <behaviors:RoutedCommandBinding Command="{Binding NoCommand}" RoutedCommand="commands:DialogWindowCommands.No" />
        <behaviors:RoutedCommandBinding Command="{Binding OKCommand}" RoutedCommand="commands:DialogWindowCommands.OK" />
        <behaviors:RoutedCommandBinding Command="{Binding CancelCommand}" RoutedCommand="commands:DialogWindowCommands.Cancel" />
    </b:Interaction.Behaviors>
    <Grid Background="{DynamicResource DialogWindow.Background}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ContentControl
                Grid.Row="0"
                Content="{Binding View}"
                Focusable="False"
                IsTabStop="False" />
            <Separator
                Grid.Row="1"
                Margin="0"
                Style="{DynamicResource SimpleHorizontalSeparatorStyle}"
                Visibility="{Binding IsFooterVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <Grid
                Grid.Row="2"
                Margin="14"
                Visibility="{Binding IsFooterVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ItemsControl
                    x:Name="LeftButtonContainer"
                    Grid.Column="0"
                    Focusable="False"
                    IsTabStop="False"
                    ItemTemplate="{StaticResource ButtonItemTemplate}"
                    ItemsPanel="{StaticResource ButtonsItemsPanelTemplate}"
                    ItemsSource="{Binding LeftButtons}" />
                <ItemsControl
                    x:Name="RightButtonContainer"
                    Grid.Column="2"
                    Focusable="False"
                    IsTabStop="False"
                    ItemTemplate="{StaticResource ButtonItemTemplate}"
                    ItemsPanel="{StaticResource ButtonsItemsPanelTemplate}"
                    ItemsSource="{Binding RightButtons}" />
            </Grid>
        </Grid>
        <controls:WaitingIndicator
            x:Name="WaitingAnimation"
            Content="{Binding}"
            Focusable="False"
            InProgress="{Binding WaitingAnimationBusy}"
            Visibility="{Binding WaitingAnimationBusy, Converter={StaticResource BooleanToVisibilityConverter}}">
            <controls:WaitingIndicator.ContentTemplate>
                <DataTemplate>
                    <StackPanel>
                        <TextBlock Text="{Binding WaitingAnimationTitle}" />
                        <TextBlock Text="{Binding WaitingAnimationMessage}" />
                    </StackPanel>
                </DataTemplate>
            </controls:WaitingIndicator.ContentTemplate>
        </controls:WaitingIndicator>
    </Grid>
</windows:WindowEx>
